name: "ci"
on:
  pull_request:
  push:
    branches:
      - master
      - dev
jobs:
  alpine-clang:
    name: "alpine-${{ matrix.alpine_version }} [clang-10]"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        alpine_version: [3.13]
    steps:
      - uses: actions/checkout@v2
      - name: Build the Container
        run: |
          sudo docker build . \
                            --build-arg alpine_version=${{ matrix.alpine_version }} \
                            --build-arg GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }} \
                            -f docker/alpine/clang.Dockerfile \
                            --tag=test-alpine:clang
      - name: Run Library Build
        run: |
          sudo docker run test-alpine:clang
  alpine-gcc:
    name: "alpine-${{ matrix.alpine_version }} [gcc-10]"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        alpine_version: [ 3.13 ]
    steps:
      - uses: actions/checkout@v2
      - name: Build the Container
        run: |
          sudo docker build . \
                            --build-arg alpine_version=${{ matrix.alpine_version }} \
                            --build-arg GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }} \
                            -f docker/alpine/gcc.Dockerfile \
                            --tag=test-alpine:gcc
      - name: Run Library Build
        run: |
          sudo docker run test-alpine:gcc
  ubuntu-clang:
    name: ${{ matrix.os }} [clang-${{ matrix.compiler_version }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ Ubuntu ]
        os: [ ubuntu-18.04 ]
        compiler_version: [ 10 ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Compiler and Check Version
        run: |
          sudo apt update -y && \
          sudo pip install --upgrade cmake && \
          sudo apt install -y clang-${{ matrix.compiler_version }} valgrind
      - name: Install Core Library
        run: |
          cd /tmp && \
          git clone https://${{secrets.GH_ACCESS_TOKEN}}@github.com/YuriyLisovskiy/xalwart.core.git && \
          cd xalwart.core && \
          git checkout dev && \
          sudo mkdir build && \
          cd build && \
          sudo cmake -DCMAKE_BUILD_TYPE=Release \
                     -DCMAKE_CXX_COMPILER=clang++-${{ matrix.compiler_version }} \
                     -DCMAKE_C_COMPILER=clang-${{ matrix.compiler_version }} \
                     .. && \
          sudo make && \
          sudo make install
      - name: Update Links and Cache of Linker
        run: |
          sudo ldconfig
      - name: Build
        run: |
          sudo mkdir build && \
          cd build/ && \
          sudo cmake -DCMAKE_CXX_COMPILER=clang++-${{ matrix.compiler_version }} \
                     -DCMAKE_C_COMPILER=clang-${{ matrix.compiler_version }} \
                     -DCMAKE_BUILD_TYPE=Debug \
                     .. && \
          sudo make
  ubuntu-gcc:
    name: ${{ matrix.os }} [gcc-${{ matrix.compiler_version }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ Ubuntu ]
        os: [ ubuntu-18.04 ]
        compiler_version: [ 10 ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Compiler and Check Version
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
          sudo apt update -y && \
          sudo pip install --upgrade cmake && \
          sudo apt install -y gcc-${{ matrix.compiler_version }} g++-${{ matrix.compiler_version }} valgrind && \
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.compiler_version }} 10 && \
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.compiler_version }} 10 && \
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 && \
          sudo update-alternatives --set cc /usr/bin/gcc && \
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 && \
          sudo update-alternatives --set c++ /usr/bin/g++ && \
          gcc --version && \
          g++ --version
      - name: Install Core Library
        run: |
          cd /tmp && \
          git clone https://${{secrets.GH_ACCESS_TOKEN}}@github.com/YuriyLisovskiy/xalwart.core.git && \
          cd xalwart.core && \
          git checkout dev && \
          sudo mkdir build && \
          cd build && \
          sudo cmake -DCMAKE_BUILD_TYPE=Release \
                     -DCMAKE_CXX_COMPILER=g++-${{ matrix.compiler_version }} \
                     -DCMAKE_C_COMPILER=gcc-${{ matrix.compiler_version }} \
                     .. && \
          sudo make && \
          sudo make install
      - name: Update Links and Cache of Linker
        run: |
          sudo ldconfig
      - name: Build
        run: |
          sudo mkdir build && \
          cd build/ && \
          sudo cmake -DCMAKE_CXX_COMPILER=g++-${{ matrix.compiler_version }} \
                     -DCMAKE_C_COMPILER=gcc-${{ matrix.compiler_version }} \
                     -DCMAKE_BUILD_TYPE=Debug \
                     .. && \
          sudo make
